<?php

namespace App\Http\Requests;

use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Contracts\Validation\Validator;

class StoreCategoryRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }
    public function failedValidation(Validator $validator)
    {
        //parent::failedValidation($validator);  TODO: Change the autogenerated stub
        throw new HttpResponseException(response()->json([
            'success'   => false,
            'message'   => 'Validation errors',
            'data'      => $validator->errors()
        ]));
    }
    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'name' => ['required', 'min:2', 'max:255'],
            'parent_id' => ['nullable', 'exists:categories,id'],
        ];

    }

    public function messages()
    {
        return [
            'name' => [
                'required' => 'This field is required',
                'min' => 'Too short',
                'max' => 'Too long'
            ]
//            'parent_id' =>[
//            ]
        ];
    }
//
//    public function failedValidation(Validator $validator)
//    {
//        throw new HttpResponseException(response()->json([
//            'success'   => false,
//            'message'   => 'Validation errors',
//            'data'      => $validator->errors()
//        ]));
//    }
}
